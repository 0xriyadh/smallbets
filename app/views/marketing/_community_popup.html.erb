<% stats = @community_stats_by_user_id[user.id] || {} %>
<%= tag.details class: "community-popup position-relative avatar",
                data: { controller: "popup", 
                        action: "keydown.esc->popup#close toggle->popup#toggle click@document->popup#closeOnClickOutside", 
                        popup_orientation_top_class: "popup-orientation-top" } do %>
  <summary class="btn avatar">
    <%= avatar_tag user, loading: :lazy %>
  </summary>

  <div class="community-popup-menu border shadow" data-popup-target="menu" data-popup-menu="true" style="opacity: 0; visibility: hidden; transition: opacity 0.1s ease;">
    <div class="community-popup-profile">
      <div class="avatar" style="--avatar-size: 96px; margin: 0 auto 0.1rem auto; cursor: default; pointer-events: none;">
        <%= avatar_tag user, loading: :lazy, size: 96 %>
      </div>
      <div class="community-popup-name" style="font-weight: bold; text-align: center; margin-bottom: 0.5rem;">
        <%= user.name %>
      </div>
      <div class="community-popup-joined" style="color: #888; margin-bottom: 0.5rem;">
        Joined <%= user.joined_at.strftime("%b %d, %Y") %>
      </div>
      <div class="community-popup-socials" style="display: flex; gap: 0.5rem; justify-content: center; margin-bottom: 0.5rem;">
        <% if user.twitter_url.present? %>
          <%= link_to with_protocol(user.twitter_url), target: "_blank" do %>
            <%= image_tag "social/twitter.svg", size: 20, alt: "Twitter" %>
          <% end %>
        <% end %>
        <% if user.linkedin_url.present? %>
          <%= link_to with_protocol(user.linkedin_url), target: "_blank" do %>
            <%= image_tag "social/linkedin.svg", size: 20, alt: "LinkedIn" %>
          <% end %>
        <% end %>
      </div>
      <% if user.personal_url.present? %>
        <div class="community-popup-site" style="margin-bottom: 0.5rem;">
          <%= link_to friendly_domain(user.personal_url), with_protocol(user.personal_url), target: "_blank", style: "color: #0077cc; word-break: break-all;" %>
        </div>
      <% end %>
      <div class="community-popup-messages" style="color: #222; margin-bottom: 0.5rem;">
        <% rank = user.message_rank %>
        <% if rank == 1 %>
          ðŸ¥‡ <%= pluralize(number_with_delimiter(user.total_message_count), 'message') %> (Rank #<%= number_with_delimiter(rank) %>)
        <% elsif rank == 2 %>
          ðŸ¥ˆ <%= pluralize(number_with_delimiter(user.total_message_count), 'message') %> (Rank #<%= number_with_delimiter(rank) %>)
        <% elsif rank == 3 %>
          ðŸ¥‰ <%= pluralize(number_with_delimiter(user.total_message_count), 'message') %> (Rank #<%= number_with_delimiter(rank) %>)
        <% elsif rank %>
          <%= pluralize(number_with_delimiter(user.total_message_count), 'message') %> (Rank #<%= number_with_delimiter(rank) %>)
        <% else %>
          No messages
        <% end %>
      </div>
    </div>
  </div>
<% end %>

<script>
document.addEventListener('DOMContentLoaded', function() {
  document.querySelectorAll('.community-popup').forEach(function(details) {
    details.addEventListener('toggle', function(e) {
      if (!details.open) return;
      
      const menu = details.querySelector('[data-popup-menu="true"]');
      if (!menu) return;
      
      // Hide initially
      menu.style.opacity = '0';
      menu.style.visibility = 'hidden';
      
      // Ensure popup is positioned absolutely relative to its parent
      menu.style.position = 'absolute';

      // Give the browser time to calculate positions
      setTimeout(function() {
        // Reset any previous positioning
        menu.style.left = '';
        menu.style.right = '';
        menu.style.transform = '';
        menu.style.top = ''; // Also reset top
        
        const avatarRect = details.getBoundingClientRect();
        const menuWidth = menu.offsetWidth;
        const windowWidth = window.innerWidth;
        const margin = 8; // Margin from edge of screen
        
        // Calculate horizontal position (relative to avatar center)
        let leftPos = (avatarRect.width / 2) - (menuWidth / 2);
        
        // Calculate the absolute left position relative to the viewport first
        let absoluteLeft = avatarRect.left + leftPos;
        
        // Ensure menu stays within viewport boundaries with margin
        if (absoluteLeft < margin) {
          // Adjust leftPos to align with the left margin
          leftPos = margin - avatarRect.left;
        } else if (absoluteLeft + menuWidth > windowWidth - margin) {
          // Adjust leftPos to align with the right margin
          leftPos = (windowWidth - margin - menuWidth) - avatarRect.left;
        }
        
        // Apply absolute positioning relative to the parent <details> element
        menu.style.left = leftPos + 'px';
        // Position below the avatar
        menu.style.top = (avatarRect.height + 8) + 'px'; 
        menu.style.transform = 'none';
        
        // Show the menu after positioning
        menu.style.opacity = '1';
        menu.style.visibility = 'visible';
      }, 20); // Slightly longer delay to ensure DOM updates
    });
  });
});
</script> 